(window.webpackJsonp=window.webpackJsonp||[]).push([["main"],{"./config/constConfig.js":
/*!*******************************!*\
  !*** ./config/constConfig.js ***!
  \*******************************/
/*! no static exports found */function(e,n){n.REDIS_MESSAGE={SHARE_MESSAGE:{KEY:"SHARE_MESSAGE_KEY",EVENT:"SHARE_MESSAGE_EVENT",CONTENT:"%USER% %OPERATE% %CONTENT%"}};n.HAPPY_RECORD={HOST_URL:"http://localhost:3001"},n.GAME_MESSAGE={GAME_INIT:"GAME_INIT",REDIS_READY:"REDIS_READY",GAME_SELECT_ROLE:"GAME_SELECT_ROLE",GAME_PLAY_CHESS:"GAME_PRESS_CHESS",GAME_START:"GAME_START",GAME_FINISH:"GAME_FINISH"}},"./static/index.js":
/*!*************************!*\
  !*** ./static/index.js ***!
  \*************************/
/*! no static exports found */function(e,n,t){"use strict";var i,o=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e},r=function(e){return e&&e.__esModule?e:{default:e}}(t(/*! ./public/socket */"./static/public/socket.js")),a=t(/*! ../config/constConfig */"./config/constConfig.js");function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}var E={},c=null,l=null,d=null,p=0,u=[],w=null,h=function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t={name:"wuziqi",number:window.__GAME_NUMBER__,uid:window.__USER_ID__};f.client.emit(e,o({},t,n))},f=new r.default({events:(i={connect:function(){console.log("connect")}},s(i,a.GAME_MESSAGE.REDIS_READY,function(e){h(a.GAME_MESSAGE.GAME_INIT)}),s(i,a.GAME_MESSAGE.GAME_INIT,function(e){E="string"==typeof e?JSON.parse(e):e,p=E.status,function(e){w=function(){var e=new Stats;return e.setMode(0),e.domElement.style.position="absolute",e.domElement.style.left="0px",e.domElement.style.top="0px",document.getElementById("Stats-output").appendChild(e.domElement),e}(),c=new THREE.Scene,l=v(e,c),u=A(e,c),(d=new THREE.WebGLRenderer).setClearColor(new THREE.Color(15658734,1)),d.setSize(window.innerWidth,window.innerHeight),d.shadowMapEnabled=!0;var n=new THREE.AmbientLight(16777215);c.add(n);var t=new THREE.PointLight(16777215);t.position.set(-40,60,-10),t.distance=1e3,c.add(t),M(e),document.getElementById("WebGL-output").appendChild(d.domElement),H(),g(e)}(T(E.roles))}),s(i,a.GAME_MESSAGE.GAME_SELECT_ROLE,function(e){var n=e.status,t=e.role,i=e.canStart,o=e.uid;n&&("playerA"!=t&&"playerB"!=t||(p=i?1:0),E.roles[t]=o,window.__USER_ID__==o?function(e){l=v(e,c),u=A(e,c),H(),g(e),M(e)}(t):T(E.roles)&&S(c))}),s(i,a.GAME_MESSAGE.GAME_PLAY_CHESS,function(e){var n=e.x,t=e.y,i=e.value,o=e.activePlayer;E.activePlayer=o,E.chessboard[n][t]=i;var r=THREE.ImageUtils.loadTexture("/assets/textures/general/black.jpg"),a=THREE.ImageUtils.loadTexture("/assets/textures/general/white.jpg"),s="0,"+n+","+t;c.children.find(function(e){return e instanceof THREE.Mesh&&e.name==s}).material.map=1==i?a:r}),s(i,a.GAME_MESSAGE.GAME_FINISH,function(e){var n=e.msg;alert(n),p=2}),i)});function _(e,n,t){var i=THREE.ImageUtils.loadTexture("/assets/textures/general/"+n+".jpg"),o=new THREE.MeshLambertMaterial({color:7829503});return o.side=THREE.FrontSide,o.map=i,o.ID=n,t&&E.roles[n]&&"audience"!=n&&(o.transparent=!0,o.opacity=.1),new THREE.Mesh(e,o)}function R(e,n){var t=_(new THREE.BoxGeometry(4,4,4,1,1,1),n,!0);return t.name=n,t.receiveShadow=!0,t.rotation.x=.5*Math.PI,t.rotation.z=-.5*Math.PI,t.position.x=e.x,t.position.y=e.y,t.position.z=e.z,t}function m(e,n){var t=_(new THREE.BoxGeometry(40,40,40,1,1,1),n);return t.receiveShadow=!0,t.rotation.x=.5*Math.PI,t.rotation.z=-.5*Math.PI,t.position.x=e.x,t.position.y=e.y,t.position.z=e.z,t}function S(e){if(E.roles.playerA){var n=m(new THREE.Vector3(-160,20,0),"playerA");e.add(n)}if(E.roles.playerB){var t=m(new THREE.Vector3(160,20,0),"playerB");e.add(t)}}function T(e){return e.playerA==window.__USER_ID__?"playerA":e.playerB==window.__USER_ID__?"playerB":e.audience.includes(window.__USER_ID__)?"audience":""}function A(e,n){var t=[];if(e)t=function(e){var n=[],t=new THREE.BoxGeometry(6,6,6),i=THREE.ImageUtils.loadTexture("/assets/textures/general/black.jpg"),o=THREE.ImageUtils.loadTexture("/assets/textures/general/white.jpg"),r=THREE.ImageUtils.loadTexture("/assets/textures/general/empty.jpg");return E.chessboard.forEach(function(a,s){a.forEach(function(c,l){var d=new THREE.MeshLambertMaterial;d.color=new THREE.Color(0,0,0),0==s||0==l||s==E.chessboard.length-1||l==a.length-1?(d.map="",d.color="0x000000"):1==c.value?d.map=o:2==c.value?d.map=i:d.map=r,d.side=THREE.FrontSide;var p=new THREE.Mesh(t,d);p.position.z=6*l-120,p.position.x=6*s-120,p.position.y=2,p.name=c.value+","+s+","+l,n.push(p),e.add(p)})}),n}(n),S(n);else{var i=R(new THREE.Vector3(0,0,5),"playerA"),o=R(new THREE.Vector3(0,0,0),"playerB"),r=R(new THREE.Vector3(0,0,-5),"audience");n.add(i),n.add(o),n.add(r),t=[i,o,r]}return t}function v(e,n){var t="";return e?"playerA"==e?((t=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,.1,1e3)).position.x=-240,t.position.y=200,t.position.z=0,t.lookAt(new THREE.Vector3(0,0,0))):"playerB"==e?((t=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,.1,1e3)).position.x=240,t.position.y=200,t.position.z=0,t.lookAt(new THREE.Vector3(0,0,0))):"audience"==e&&((t=new THREE.OrthographicCamera(window.innerWidth/-8,window.innerWidth/8,window.innerHeight/16,window.innerHeight/-16,-200,500)).position.x=0,t.position.y=60,t.position.z=160,t.lookAt(new THREE.Vector3(0,0,0))):((t=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,.1,1e3)).position.x=0,t.position.y=-20,t.position.z=0,t.lookAt(n.position)),t}function H(){w.update(),requestAnimationFrame(H),d.render(c,l)}function g(e){new THREE.Projector;document.addEventListener("mousedown",function(n){var t=new THREE.Vector3(n.clientX/window.innerWidth*2-1,-n.clientY/window.innerHeight*2+1,.5);t=t.unproject(l);var i=new THREE.Raycaster(l.position,t.sub(l.position).normalize()).intersectObjects(u);if(i.length>0)if(e){if("audience"!=e&&1==p){var o=i[0].object;if(!o)return;var r=o.name.split(",");if("0"!=r[0])return;h(a.GAME_MESSAGE.GAME_PLAY_CHESS,{x:r[1],y:r[2],player:e})}}else.1!=i[0].object.material.opacity?(i[0].object.material.transparent=!0,i[0].object.material.opacity=.1,h(a.GAME_MESSAGE.GAME_SELECT_ROLE,{role:i[0].object.name})):alert("角色不可选")},!1)}function M(e){if("audience"==e){var n=new function(){this.perspective="Perspective",this.positionX=0,this.positionY=60,this.positionZ=160,this.changeCameraPosition=function(){l.position.x=n.positionX,l.position.y=n.positionY,l.position.z=n.positionZ},this.switchCamera=function(){l instanceof THREE.PerspectiveCamera?((l=new THREE.OrthographicCamera(window.innerWidth/-8,window.innerWidth/8,window.innerHeight/16,window.innerHeight/-16,-200,500)).position.x=n.positionX,l.position.y=n.positionY,l.position.z=n.positionZ,l.lookAt(new THREE.Vector3(0,0,0)),this.perspective="Orthographic"):((l=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,.1,1e3)).position.x=n.positionX,l.position.y=n.positionY,l.position.z=n.positionZ,l.lookAt(new THREE.Vector3(0,0,0)),this.perspective="Perspective")}},t=new dat.GUI;t.add(n,"switchCamera"),t.add(n,"positionX",0,1e3).onChange(n.changeCameraPosition),t.add(n,"positionY",0,1e3).onChange(n.changeCameraPosition),t.add(n,"positionZ",0,1e3).onChange(n.changeCameraPosition),t.add(n,"perspective").listen()}}},"./static/public/socket.js":
/*!*********************************!*\
  !*** ./static/public/socket.js ***!
  \*********************************/
/*! no static exports found */function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i=function(){function e(e,n){for(var t=0;t<n.length;t++){var i=n[t];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(n,t,i){return t&&e(n.prototype,t),i&&e(n,i),n}}(),o=function(e){return e&&e.__esModule?e:{default:e}}(t(/*! socket.io-client */"./node_modules/socket.io-client/lib/index.js"));var r=function(){function e(n){var t=n.events;if(function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e),this.client=new o.default,!this.client)return null;t&&this.addEvent(t)}return i(e,[{key:"addEvent",value:function(e){var n=this;try{Object.entries(e).map(function(e){n.client.on.apply(n.client,e)})}catch(e){throw"add events error"}}}]),e}();n.default=r},0:
/*!********************!*\
  !*** ws (ignored) ***!
  \********************/
/*! no static exports found */function(e,n){}},[["./static/index.js","manifest","chunk-vendor"]]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,