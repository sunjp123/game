{"map":"{\"version\":3,\"sources\":[\"/Applications/work/game/config/constConfig.js\",\"/Applications/work/game/static/index.js\",\"/Applications/work/game/static/public/socket.js\"],\"names\":[\"exports\",\"REDIS_MESSAGE\",\"SHARE_MESSAGE\",\"KEY\",\"EVENT\",\"CONTENT\",\"HAPPY_RECORD\",\"HOST_URL\",\"GAME_MESSAGE\",\"GAME_INIT\",\"REDIS_READY\",\"GAME_SELECT_ROLE\",\"__webpack_require__\",\"_constConfig\",\"gameData\",\"scene\",\"send\",\"key\",\"value\",\"arguments\",\"length\",\"undefined\",\"message\",\"name\",\"number\",\"window\",\"__GAME_NUMBER__\",\"uid\",\"__USER_ID__\",\"socketServer\",\"client\",\"emit\",\"_extends\",\"SocketServer\",\"events\",\"connect\",\"_defineProperty\",\"_events\",\"initData\",\"init\",\"roles\",\"playerA\",\"playerB\",\"audience\",\"includes\",\"checkRole\",\"JSON\",\"parse\",\"_ref\",\"status\",\"role\",\"console\",\"log\",\"createRoleMesh\",\"geom\",\"transparent\",\"texture\",\"THREE\",\"ImageUtils\",\"loadTexture\",\"meshMaterial\",\"MeshLambertMaterial\",\"color\",\"side\",\"FrontSide\",\"map\",\"ID\",\"opacity\",\"Mesh\",\"createRoleCard\",\"position\",\"card\",\"BoxGeometry\",\"receiveShadow\",\"rotation\",\"x\",\"Math\",\"PI\",\"z\",\"y\",\"createPlayerRole\",\"rolename\",\"initMesh\",\"meshs\",\"cubes\",\"cubeGeometry\",\"textureBlack\",\"textureWhite\",\"textureEmpty\",\"chessboard\",\"forEach\",\"boxs\",\"i\",\"box\",\"j\",\"cubeMaterial\",\"Color\",\"cube\",\"push\",\"add\",\"createChessboard\",\"Vector3\",\"createPlayers\",\"stats\",\"Stats\",\"setMode\",\"domElement\",\"style\",\"left\",\"top\",\"document\",\"getElementById\",\"appendChild\",\"initStats\",\"Scene\",\"camera\",\"PerspectiveCamera\",\"innerWidth\",\"innerHeight\",\"lookAt\",\"initCamera\",\"renderer\",\"WebGLRenderer\",\"setClearColor\",\"setSize\",\"shadowMapEnabled\",\"ambientLight\",\"AmbientLight\",\"pointLight\",\"PointLight\",\"set\",\"distance\",\"render\",\"update\",\"requestAnimationFrame\",\"Projector\",\"addEventListener\",\"event\",\"vector\",\"clientX\",\"clientY\",\"unproject\",\"intersects\",\"Raycaster\",\"sub\",\"normalize\",\"intersectObjects\",\"object\",\"material\",\"alert\",\"SokcetServer\",\"_classCallCheck\",\"this\",\"socketClient\",\"addEvent\",\"_this\",\"Object\",\"entries\",\"on\",\"apply\",\"e\"],\"mappings\":\"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\",\"sourcesContent\":[\"const REDIS_MESSAGE = {\\n    SHARE_MESSAGE:{\\n        KEY:'SHARE_MESSAGE_KEY',\\n        EVENT:'SHARE_MESSAGE_EVENT',\\n        CONTENT:'%USER% %OPERATE% %CONTENT%'\\n    }\\n}\\n\\nexports.REDIS_MESSAGE = REDIS_MESSAGE\\n\\nconst HAPPY_RECORD = {\\n    HOST_URL:'http://localhost:3001'\\n}\\n\\nexports.HAPPY_RECORD = HAPPY_RECORD\\n\\n\\nexports.GAME_MESSAGE = {\\n    GAME_INIT:'GAME_INIT',\\n    REDIS_READY:'REDIS_READY',\\n    GAME_SELECT_ROLE:'GAME_SELECT_ROLE'\\n}\",\"import SocketServer from \\\"./public/socket\\\"\\nimport { GAME_MESSAGE } from \\\"../config/constConfig\\\"\\nlet gameData = {}\\nlet scene = null\\nconst send = (key,value={})=>{\\n  let message = {name:'wuziqi',number:window.__GAME_NUMBER__,uid:window.__USER_ID__}\\n  socketServer.client.emit(key,{...message,...value})\\n}\\nconst socketServer = new SocketServer({\\n  events:{\\n    'connect':()=>{\\n    },\\n    [GAME_MESSAGE.REDIS_READY]:(message)=>{\\n      send(GAME_MESSAGE.GAME_INIT)\\n    },\\n    [GAME_MESSAGE.GAME_INIT]:(initData)=>{\\n      gameData = typeof initData == 'string'?JSON.parse(initData):initData\\n      init(checkRole(gameData.roles))\\n    },\\n    [GAME_MESSAGE.GAME_SELECT_ROLE]:({status,role})=>{\\n      console.log(status)\\n      if(status){\\n        init(role)\\n      }\\n    }\\n  }\\n});\\n/**\\n * 创建角色卡片网格\\n * @param {位置} position \\n * @param {角色} role \\n */\\nfunction createRoleMesh(geom,role,transparent) {\\n\\n  var texture = THREE.ImageUtils.loadTexture(\\\"/assets/textures/general/\\\" + role + \\\".jpg\\\");\\n  var meshMaterial = new THREE.MeshLambertMaterial({color: 0x7777ff});\\n  meshMaterial.side = THREE.FrontSide;//THREE.DoubleSide\\n  meshMaterial.map = texture;\\n  meshMaterial.ID = role;\\n  if(transparent&&gameData.roles[role]&&role!='audience'){\\n    meshMaterial.transparent = true; //是否可以设置透明度\\n    meshMaterial.opacity = 0.1;      //设置透明度\\n  }\\n  //基础材质 多用于线框调试\\n  // var wireFrameMat = new THREE.MeshBasicMaterial();\\n  // wireFrameMat.wireframe = true;\\n\\n  // 融合材质\\n  // var mesh = THREE.SceneUtils.createMultiMaterialObject(geom, [meshMaterial, wireFrameMat]);\\n  var mesh = new THREE.Mesh(geom, meshMaterial);\\n  return mesh;\\n}\\n/**\\n * 创建角色卡片\\n * @param {位置} position \\n * @param {角色} role \\n */\\nfunction createRoleCard(position,role){\\n    // create the ground plane\\n    var cardGeometry = new THREE.BoxGeometry(4, 4, 4,1, 1,1);\\n    var card = createRoleMesh(cardGeometry,role,true);\\n    card.name = role;\\n    // var plane = new THREE.Mesh(planeGeometry, planeMaterial);\\n    card.receiveShadow = true;\\n    // rotate and position the plane\\n    card.rotation.x = 0.5 * Math.PI;\\n    card.rotation.z = -0.5 * Math.PI;\\n    card.position.x = position.x;\\n    card.position.y = position.y;\\n    card.position.z = position.z;\\n    return card\\n}\\n/**\\n * 创建棋盘\\n * @param {场景} scene \\n */\\nfunction createChessboard(scene){\\n  var cubes = []\\n  var cubeGeometry = new THREE.BoxGeometry(6, 6, 6);\\n  var textureBlack = THREE.ImageUtils.loadTexture(\\\"/assets/textures/general/black.jpg\\\");\\n  var textureWhite = THREE.ImageUtils.loadTexture(\\\"/assets/textures/general/white.jpg\\\");\\n  var textureEmpty = THREE.ImageUtils.loadTexture(\\\"/assets/textures/general/empty.jpg\\\");\\n  gameData.chessboard.forEach((boxs,i)=>{\\n      boxs.forEach((box,j)=>{\\n          var cubeMaterial = new THREE.MeshLambertMaterial();\\n          cubeMaterial.color = new THREE.Color(0, 0, 0);\\n          if(i==0 || j==0 || i==(gameData.chessboard.length-1) || j==(boxs.length-1)){\\n            cubeMaterial.map = ''\\n            cubeMaterial.color = '0x000000'\\n          }\\n          else if(box.value == 1){\\n            cubeMaterial.map = textureWhite\\n          }else if(box.value == 2){\\n            cubeMaterial.map = textureBlack\\n          }else{\\n            cubeMaterial.map = textureEmpty\\n          }\\n          cubeMaterial.side = THREE.FrontSide;//THREE.DoubleSide\\n          var cube = new THREE.Mesh(cubeGeometry, cubeMaterial);\\n\\n          cube.position.z = -((240) / 2) + (j * 6);\\n          cube.position.x = -((240) / 2) + (i * 6);\\n          cube.position.y = 2;\\n          cubes.push(cube)\\n          scene.add(cube);\\n      })\\n  })\\n  return cubes\\n}\\nfunction createPlayerRole(position,rolename){\\n    var roleGeometry = new THREE.BoxGeometry(40, 40, 40,1, 1,1);\\n    var role = createRoleMesh(roleGeometry,rolename);\\n    // var plane = new THREE.Mesh(planeGeometry, planeMaterial);\\n    role.receiveShadow = true;\\n    // rotate and position the plane\\n    role.rotation.x = 0.5 * Math.PI;\\n    role.rotation.z = -0.5 * Math.PI;\\n    role.position.x = position.x;\\n    role.position.y = position.y;\\n    role.position.z = position.z;\\n    return role\\n}\\nfunction createPlayers(scene){\\n  var playerA = createPlayerRole(new THREE.Vector3(-160, 20, 0),'playerA')\\n  var playerB = createPlayerRole(new THREE.Vector3(160, 20, 0),'playerB')\\n  scene.add(playerA);\\n  scene.add(playerB);\\n}\\nfunction checkRole(roles){\\n    if(roles.playerA == window.__USER_ID__){\\n      return 'playerA'\\n    }\\n    if(roles.playerB == window.__USER_ID__){\\n      return 'playerB'\\n    }\\n    if(roles.audience.includes(window.__USER_ID__)){\\n      return 'audience'\\n    }\\n    return ''\\n}\\n\\nfunction initMesh(role,scene){\\n   var meshs = []\\n   if(!role){\\n      var playerA = createRoleCard(new THREE.Vector3(0, 0, 5),'playerA')\\n      var playerB = createRoleCard(new THREE.Vector3(0, 0, 0),'playerB')\\n      var audience = createRoleCard(new THREE.Vector3(0, 0, -5),'audience')\\n      scene.add(playerA);\\n      scene.add(playerB);\\n      scene.add(audience);\\n      meshs = [playerA,playerB,audience]\\n   }else{\\n    meshs = createChessboard(scene)\\n    createPlayers(scene)\\n   }\\n   return meshs\\n}\\n\\nfunction initCamera(role,scene){\\n    var camera = ''\\n   if(!role){\\n     // create a camera, which defines where we're looking at.\\n      camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 1000);\\n      // position and point the camera to the center of the scene\\n      camera.position.x = 0;\\n      camera.position.y = -20;\\n      camera.position.z = 0;\\n      camera.lookAt(scene.position);\\n   }else if(role == 'playerA'){\\n      // camera = new THREE.OrthographicCamera(window.innerWidth / -14, window.innerWidth / 14, window.innerHeight / 8, window.innerHeight / -10,-400, 800);\\n      camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 1000);\\n      camera.position.x = -240;\\n      camera.position.y = 200;\\n      camera.position.z = 0;\\n      camera.lookAt(new THREE.Vector3(0,0,0));\\n   }else if(role == 'playerB'){\\n    // camera = new THREE.OrthographicCamera(window.innerWidth / -14, window.innerWidth / 14, window.innerHeight / 8, window.innerHeight / -10,-400, 800);\\n    camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 1000);\\n    camera.position.x = 240;\\n    camera.position.y = 200;\\n    camera.position.z = 0;\\n    camera.lookAt(new THREE.Vector3(0,0,0));\\n   }else if(role == 'audience'){\\n    // camera = new THREE.OrthographicCamera(window.innerWidth / -14, window.innerWidth / 14, window.innerHeight / 8, window.innerHeight / -10,-400, 800);\\n      camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 1000);\\n      camera.position.x = -200;\\n      camera.position.y = 200;\\n      camera.position.z = 0;\\n      camera.lookAt(new THREE.Vector3(0,0,0));\\n  }\\n   return camera\\n}\\n/**\\n * 初始化\\n * @param {是否开始游戏} start \\n */\\nfunction init(role) {\\n\\n  var stats = initStats();\\n\\n  // 新建一个场景\\n  scene = new THREE.Scene();\\n  // 初始化一个相机\\n  var camera = initCamera(role,scene)\\n  // scene.add(camera);\\n\\n  // 创建渲染器\\n  var renderer = new THREE.WebGLRenderer();\\n\\n  renderer.setClearColor(new THREE.Color(0xEEEEEE, 1.0));\\n  renderer.setSize(window.innerWidth, window.innerHeight);\\n  renderer.shadowMapEnabled = true;\\n  var meshs = initMesh(role,scene)\\n\\n  // add subtle ambient lighting\\n  var ambientLight = new THREE.AmbientLight(0xffffff);\\n  scene.add(ambientLight);\\n\\n  // add spotlight for the shadows\\n  var pointLight = new THREE.PointLight(0xffffff);\\n  pointLight.position.set(-40, 60, -10);\\n  pointLight.distance = 1000;\\n  // pointLight.castShadow = true;\\n  scene.add(pointLight);\\n\\n  // add the output of the renderer to the html element\\n  document.getElementById(\\\"WebGL-output\\\").appendChild(renderer.domElement);\\n  render();\\n\\n  function render() {\\n      stats.update();\\n      //按帧刷新\\n      requestAnimationFrame(render);\\n      renderer.render(scene, camera);\\n  }\\n\\n  function initStats() {\\n\\n      var stats = new Stats();\\n\\n      stats.setMode(0); // 0: fps, 1: ms\\n\\n      // Align top-left\\n      stats.domElement.style.position = 'absolute';\\n      stats.domElement.style.left = '0px';\\n      stats.domElement.style.top = '0px';\\n\\n      document.getElementById(\\\"Stats-output\\\").appendChild(stats.domElement);\\n\\n      return stats;\\n  }\\n  var projector = new THREE.Projector();\\n  document.addEventListener('mousedown', onDocumentMouseDown, false);\\n\\n  function onDocumentMouseDown(event) {\\n\\n      var vector = new THREE.Vector3(( event.clientX / window.innerWidth ) * 2 - 1, -( event.clientY / window.innerHeight ) * 2 + 1, 0.5);\\n      vector = vector.unproject(camera);\\n      var raycaster = new THREE.Raycaster(camera.position, vector.sub(camera.position).normalize());\\n      var intersects = raycaster.intersectObjects(meshs);\\n      if (intersects.length > 0) {\\n\\n          console.log(intersects[0]);\\n          if(!role){\\n            if(intersects[0].object.material.opacity != 0.1){\\n              intersects[0].object.material.transparent = true;\\n              intersects[0].object.material.opacity = 0.1;\\n              send(GAME_MESSAGE.GAME_SELECT_ROLE,{role:intersects[0].object.name})\\n            }else{\\n              alert('角色不可选')\\n            }\\n          }else{\\n            switch(role){\\n              case 'playerA':\\n              //var textureBlack = THREE.ImageUtils.loadTexture(\\\"/assets/textures/general/black.jpg\\\");\\n              var textureWhite = THREE.ImageUtils.loadTexture(\\\"/assets/textures/general/white.jpg\\\");\\n              intersects[0].object.material.map = textureWhite\\n              break;\\n            }\\n          }\\n      }\\n  }\\n}\\n\\n\\n\",\"import socketClient from 'socket.io-client';\\n\\nexport default class SokcetServer {\\n    constructor({events}){\\n        this.client = new socketClient()\\n        if(!this.client){\\n            return null\\n        }\\n        if(events){\\n            this.addEvent(events)\\n        }\\n    }\\n    addEvent(events){\\n        try{\\n            Object.entries(events).map(event =>{\\n                this.client.on.apply(this.client,event)\\n            })\\n        }catch(e){\\n            throw 'add events error'\\n        }\\n        \\n    }\\n\\n}\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[\"main\"],{\"./config/constConfig.js\":\n/*!*******************************!*\\\n  !*** ./config/constConfig.js ***!\n  \\*******************************/\n/*! no static exports found */function(e,n){n.REDIS_MESSAGE={SHARE_MESSAGE:{KEY:\"SHARE_MESSAGE_KEY\",EVENT:\"SHARE_MESSAGE_EVENT\",CONTENT:\"%USER% %OPERATE% %CONTENT%\"}};n.HAPPY_RECORD={HOST_URL:\"http://localhost:3001\"},n.GAME_MESSAGE={GAME_INIT:\"GAME_INIT\",REDIS_READY:\"REDIS_READY\",GAME_SELECT_ROLE:\"GAME_SELECT_ROLE\"}},\"./static/index.js\":\n/*!*************************!*\\\n  !*** ./static/index.js ***!\n  \\*************************/\n/*! no static exports found */function(e,n,t){\"use strict\";var o,i=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e},r=function(e){return e&&e.__esModule?e:{default:e}}(t(/*! ./public/socket */\"./static/public/socket.js\")),a=t(/*! ../config/constConfig */\"./config/constConfig.js\");function E(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}var s={},c=null,l=function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t={name:\"wuziqi\",number:window.__GAME_NUMBER__,uid:window.__USER_ID__};u.client.emit(e,i({},t,n))},u=new r.default({events:(o={connect:function(){}},E(o,a.GAME_MESSAGE.REDIS_READY,function(e){l(a.GAME_MESSAGE.GAME_INIT)}),E(o,a.GAME_MESSAGE.GAME_INIT,function(e){R(function(e){if(e.playerA==window.__USER_ID__)return\"playerA\";if(e.playerB==window.__USER_ID__)return\"playerB\";if(e.audience.includes(window.__USER_ID__))return\"audience\";return\"\"}((s=\"string\"==typeof e?JSON.parse(e):e).roles))}),E(o,a.GAME_MESSAGE.GAME_SELECT_ROLE,function(e){var n=e.status,t=e.role;console.log(n),n&&R(t)}),o)});function d(e,n,t){var o=THREE.ImageUtils.loadTexture(\"/assets/textures/general/\"+n+\".jpg\"),i=new THREE.MeshLambertMaterial({color:7829503});return i.side=THREE.FrontSide,i.map=o,i.ID=n,t&&s.roles[n]&&\"audience\"!=n&&(i.transparent=!0,i.opacity=.1),new THREE.Mesh(e,i)}function p(e,n){var t=d(new THREE.BoxGeometry(4,4,4,1,1,1),n,!0);return t.name=n,t.receiveShadow=!0,t.rotation.x=.5*Math.PI,t.rotation.z=-.5*Math.PI,t.position.x=e.x,t.position.y=e.y,t.position.z=e.z,t}function w(e,n){var t=d(new THREE.BoxGeometry(40,40,40,1,1,1),n);return t.receiveShadow=!0,t.rotation.x=.5*Math.PI,t.rotation.z=-.5*Math.PI,t.position.x=e.x,t.position.y=e.y,t.position.z=e.z,t}function f(e,n){var t=[];if(e)t=function(e){var n=[],t=new THREE.BoxGeometry(6,6,6),o=THREE.ImageUtils.loadTexture(\"/assets/textures/general/black.jpg\"),i=THREE.ImageUtils.loadTexture(\"/assets/textures/general/white.jpg\"),r=THREE.ImageUtils.loadTexture(\"/assets/textures/general/empty.jpg\");return s.chessboard.forEach(function(a,E){a.forEach(function(c,l){var u=new THREE.MeshLambertMaterial;u.color=new THREE.Color(0,0,0),0==E||0==l||E==s.chessboard.length-1||l==a.length-1?(u.map=\"\",u.color=\"0x000000\"):1==c.value?u.map=i:2==c.value?u.map=o:u.map=r,u.side=THREE.FrontSide;var d=new THREE.Mesh(t,u);d.position.z=6*l-120,d.position.x=6*E-120,d.position.y=2,n.push(d),e.add(d)})}),n}(n),function(e){var n=w(new THREE.Vector3(-160,20,0),\"playerA\"),t=w(new THREE.Vector3(160,20,0),\"playerB\");e.add(n),e.add(t)}(n);else{var o=p(new THREE.Vector3(0,0,5),\"playerA\"),i=p(new THREE.Vector3(0,0,0),\"playerB\"),r=p(new THREE.Vector3(0,0,-5),\"audience\");n.add(o),n.add(i),n.add(r),t=[o,i,r]}return t}function R(e){var n=function(){var e=new Stats;return e.setMode(0),e.domElement.style.position=\"absolute\",e.domElement.style.left=\"0px\",e.domElement.style.top=\"0px\",document.getElementById(\"Stats-output\").appendChild(e.domElement),e}();c=new THREE.Scene;var t=function(e,n){var t=\"\";return e?\"playerA\"==e?((t=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,.1,1e3)).position.x=-240,t.position.y=200,t.position.z=0,t.lookAt(new THREE.Vector3(0,0,0))):\"playerB\"==e?((t=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,.1,1e3)).position.x=240,t.position.y=200,t.position.z=0,t.lookAt(new THREE.Vector3(0,0,0))):\"audience\"==e&&((t=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,.1,1e3)).position.x=-200,t.position.y=200,t.position.z=0,t.lookAt(new THREE.Vector3(0,0,0))):((t=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,.1,1e3)).position.x=0,t.position.y=-20,t.position.z=0,t.lookAt(n.position)),t}(e,c),o=new THREE.WebGLRenderer;o.setClearColor(new THREE.Color(15658734,1)),o.setSize(window.innerWidth,window.innerHeight),o.shadowMapEnabled=!0;var i=f(e,c),r=new THREE.AmbientLight(16777215);c.add(r);var E=new THREE.PointLight(16777215);E.position.set(-40,60,-10),E.distance=1e3,c.add(E),document.getElementById(\"WebGL-output\").appendChild(o.domElement),function e(){n.update();requestAnimationFrame(e);o.render(c,t)}();new THREE.Projector;document.addEventListener(\"mousedown\",function(n){var o=new THREE.Vector3(n.clientX/window.innerWidth*2-1,-n.clientY/window.innerHeight*2+1,.5);o=o.unproject(t);var r=new THREE.Raycaster(t.position,o.sub(t.position).normalize()).intersectObjects(i);if(r.length>0)if(console.log(r[0]),e)switch(e){case\"playerA\":var E=THREE.ImageUtils.loadTexture(\"/assets/textures/general/white.jpg\");r[0].object.material.map=E}else.1!=r[0].object.material.opacity?(r[0].object.material.transparent=!0,r[0].object.material.opacity=.1,l(a.GAME_MESSAGE.GAME_SELECT_ROLE,{role:r[0].object.name})):alert(\"角色不可选\")},!1)}},\"./static/public/socket.js\":\n/*!*********************************!*\\\n  !*** ./static/public/socket.js ***!\n  \\*********************************/\n/*! no static exports found */function(e,n,t){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0});var o=function(){function e(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(n,t,o){return t&&e(n.prototype,t),o&&e(n,o),n}}(),i=function(e){return e&&e.__esModule?e:{default:e}}(t(/*! socket.io-client */\"./node_modules/socket.io-client/lib/index.js\"));var r=function(){function e(n){var t=n.events;if(function(e,n){if(!(e instanceof n))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.client=new i.default,!this.client)return null;t&&this.addEvent(t)}return o(e,[{key:\"addEvent\",value:function(e){var n=this;try{Object.entries(e).map(function(e){n.client.on.apply(n.client,e)})}catch(e){throw\"add events error\"}}}]),e}();n.default=r},0:\n/*!********************!*\\\n  !*** ws (ignored) ***!\n  \\********************/\n/*! no static exports found */function(e,n){}},[[\"./static/index.js\",\"manifest\",\"chunk-vendor\"]]]);","extractedComments":[]}