{"map":"{\"version\":3,\"sources\":[\"/Applications/work/game/config/constConfig.js\",\"/Applications/work/game/static/index.js\",\"/Applications/work/game/static/public/socket.js\"],\"names\":[\"exports\",\"REDIS_MESSAGE\",\"SHARE_MESSAGE\",\"KEY\",\"EVENT\",\"CONTENT\",\"HAPPY_RECORD\",\"HOST_URL\",\"GAME_MESSAGE\",\"GAME_INIT\",\"REDIS_READY\",\"GAME_SELECT_ROLE\",\"GAME_PLAY_CHESS\",\"GAME_START\",\"__webpack_require__\",\"_constConfig\",\"gameData\",\"scene\",\"camera\",\"renderer\",\"meshs\",\"stats\",\"send\",\"key\",\"value\",\"arguments\",\"length\",\"undefined\",\"message\",\"name\",\"number\",\"window\",\"__GAME_NUMBER__\",\"uid\",\"__USER_ID__\",\"socketServer\",\"client\",\"emit\",\"_extends\",\"SocketServer\",\"events\",\"connect\",\"console\",\"log\",\"_defineProperty\",\"_events\",\"initData\",\"role\",\"Stats\",\"setMode\",\"domElement\",\"style\",\"position\",\"left\",\"top\",\"document\",\"getElementById\",\"appendChild\",\"initStats\",\"THREE\",\"Scene\",\"initCamera\",\"initMesh\",\"WebGLRenderer\",\"setClearColor\",\"Color\",\"setSize\",\"innerWidth\",\"innerHeight\",\"shadowMapEnabled\",\"ambientLight\",\"AmbientLight\",\"add\",\"pointLight\",\"PointLight\",\"set\",\"distance\",\"render\",\"init\",\"roles\",\"playerA\",\"playerB\",\"audience\",\"includes\",\"checkRole\",\"JSON\",\"parse\",\"_ref\",\"status\",\"canStart\",\"Projector\",\"addEventListener\",\"event\",\"vector\",\"Vector3\",\"clientX\",\"clientY\",\"unproject\",\"intersects\",\"Raycaster\",\"sub\",\"normalize\",\"intersectObjects\",\"textureWhite\",\"ImageUtils\",\"loadTexture\",\"object\",\"material\",\"map\",\"opacity\",\"transparent\",\"alert\",\"bindEvent\",\"start\",\"createRoleMesh\",\"geom\",\"texture\",\"meshMaterial\",\"MeshLambertMaterial\",\"color\",\"side\",\"FrontSide\",\"ID\",\"Mesh\",\"createRoleCard\",\"card\",\"BoxGeometry\",\"receiveShadow\",\"rotation\",\"x\",\"Math\",\"PI\",\"z\",\"y\",\"createPlayerRole\",\"rolename\",\"cubes\",\"cubeGeometry\",\"textureBlack\",\"textureEmpty\",\"chessboard\",\"forEach\",\"boxs\",\"i\",\"box\",\"j\",\"cubeMaterial\",\"cube\",\"push\",\"createChessboard\",\"createPlayers\",\"PerspectiveCamera\",\"lookAt\",\"update\",\"requestAnimationFrame\",\"SokcetServer\",\"_classCallCheck\",\"this\",\"socketClient\",\"addEvent\",\"_this\",\"Object\",\"entries\",\"on\",\"apply\",\"e\"],\"mappings\":\"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\",\"sourcesContent\":[\"const REDIS_MESSAGE = {\\n    SHARE_MESSAGE:{\\n        KEY:'SHARE_MESSAGE_KEY',\\n        EVENT:'SHARE_MESSAGE_EVENT',\\n        CONTENT:'%USER% %OPERATE% %CONTENT%'\\n    }\\n}\\n\\nexports.REDIS_MESSAGE = REDIS_MESSAGE\\n\\nconst HAPPY_RECORD = {\\n    HOST_URL:'http://localhost:3001'\\n}\\n\\nexports.HAPPY_RECORD = HAPPY_RECORD\\n\\n\\nexports.GAME_MESSAGE = {\\n    GAME_INIT:'GAME_INIT',\\n    REDIS_READY:'REDIS_READY',\\n    GAME_SELECT_ROLE:'GAME_SELECT_ROLE',\\n    GAME_PLAY_CHESS:'GAME_PRESS_CHESS',\\n    GAME_START:'GAME_START'\\n}\",\"import SocketServer from \\\"./public/socket\\\"\\nimport { GAME_MESSAGE } from \\\"../config/constConfig\\\"\\nlet gameData = {}\\nlet scene = null;\\nlet camera = null;\\nlet renderer = null;\\nlet gameStatus = 0; //未开始\\nlet meshs = [];\\nlet stats = null;\\n/**\\n * 发送消息\\n * @param {消息key} key \\n * @param {消息内容} value \\n */\\nconst send = (key,value={})=>{\\n  let message = {name:'wuziqi',number:window.__GAME_NUMBER__,uid:window.__USER_ID__}\\n  socketServer.client.emit(key,{...message,...value})\\n}\\n/**\\n * 创建socket 类\\n */\\nconst socketServer = new SocketServer({\\n  events:{\\n    'connect':()=>{\\n      console.log('connect')\\n    },\\n    [GAME_MESSAGE.REDIS_READY]:(message)=>{\\n      send(GAME_MESSAGE.GAME_INIT)\\n    },\\n    [GAME_MESSAGE.GAME_INIT]:(initData)=>{\\n      gameData = typeof initData == 'string'?JSON.parse(initData):initData\\n      init(checkRole(gameData.roles))\\n    },\\n    [GAME_MESSAGE.GAME_SELECT_ROLE]:({status,role,canStart})=>{\\n      console.log(status)\\n      if(status){\\n        if(role == 'playerA' || role == 'playerB')\\n        gameStatus = canStart?1:0\\n\\n        start(role)\\n      }\\n    }\\n  }\\n});\\n/**\\n * 创建角色卡片网格\\n * @param {位置} position \\n * @param {角色} role \\n */\\nfunction createRoleMesh(geom,role,transparent) {\\n\\n  var texture = THREE.ImageUtils.loadTexture(\\\"/assets/textures/general/\\\" + role + \\\".jpg\\\");\\n  var meshMaterial = new THREE.MeshLambertMaterial({color: 0x7777ff});\\n  meshMaterial.side = THREE.FrontSide;//THREE.DoubleSide\\n  meshMaterial.map = texture;\\n  meshMaterial.ID = role;\\n  if(transparent&&gameData.roles[role]&&role!='audience'){\\n    meshMaterial.transparent = true; //是否可以设置透明度\\n    meshMaterial.opacity = 0.1;      //设置透明度\\n  }\\n  //基础材质 多用于线框调试\\n  // var wireFrameMat = new THREE.MeshBasicMaterial();\\n  // wireFrameMat.wireframe = true;\\n\\n  // 融合材质\\n  // var mesh = THREE.SceneUtils.createMultiMaterialObject(geom, [meshMaterial, wireFrameMat]);\\n  var mesh = new THREE.Mesh(geom, meshMaterial);\\n  return mesh;\\n}\\n/**\\n * 创建角色卡片\\n * @param {位置} position \\n * @param {角色} role \\n */\\nfunction createRoleCard(position,role){\\n    // create the ground plane\\n    var cardGeometry = new THREE.BoxGeometry(4, 4, 4,1, 1,1);\\n    var card = createRoleMesh(cardGeometry,role,true);\\n    card.name = role;\\n    // var plane = new THREE.Mesh(planeGeometry, planeMaterial);\\n    card.receiveShadow = true;\\n    // rotate and position the plane\\n    card.rotation.x = 0.5 * Math.PI;\\n    card.rotation.z = -0.5 * Math.PI;\\n    card.position.x = position.x;\\n    card.position.y = position.y;\\n    card.position.z = position.z;\\n    return card\\n}\\n/**\\n * 创建棋盘\\n * @param {场景} scene \\n */\\nfunction createChessboard(scene){\\n  var cubes = []\\n  var cubeGeometry = new THREE.BoxGeometry(6, 6, 6);\\n  var textureBlack = THREE.ImageUtils.loadTexture(\\\"/assets/textures/general/black.jpg\\\");\\n  var textureWhite = THREE.ImageUtils.loadTexture(\\\"/assets/textures/general/white.jpg\\\");\\n  var textureEmpty = THREE.ImageUtils.loadTexture(\\\"/assets/textures/general/empty.jpg\\\");\\n  gameData.chessboard.forEach((boxs,i)=>{\\n      boxs.forEach((box,j)=>{\\n          var cubeMaterial = new THREE.MeshLambertMaterial();\\n          cubeMaterial.color = new THREE.Color(0, 0, 0);\\n          if(i==0 || j==0 || i==(gameData.chessboard.length-1) || j==(boxs.length-1)){\\n            cubeMaterial.map = ''\\n            cubeMaterial.color = '0x000000'\\n          }\\n          else if(box.value == 1){\\n            cubeMaterial.map = textureWhite\\n          }else if(box.value == 2){\\n            cubeMaterial.map = textureBlack\\n          }else{\\n            cubeMaterial.map = textureEmpty\\n          }\\n          cubeMaterial.side = THREE.FrontSide;//THREE.DoubleSide\\n          var cube = new THREE.Mesh(cubeGeometry, cubeMaterial);\\n\\n          cube.position.z = -((240) / 2) + (j * 6);\\n          cube.position.x = -((240) / 2) + (i * 6);\\n          cube.position.y = 2;\\n          cubes.push(cube)\\n          scene.add(cube);\\n      })\\n  })\\n  return cubes\\n}\\n/**\\n * 创建角色形象\\n * @param {角色位置} position \\n * @param {角色名} rolename \\n */\\nfunction createPlayerRole(position,rolename){\\n    var roleGeometry = new THREE.BoxGeometry(40, 40, 40,1, 1,1);\\n    var role = createRoleMesh(roleGeometry,rolename);\\n    // var plane = new THREE.Mesh(planeGeometry, planeMaterial);\\n    role.receiveShadow = true;\\n    // rotate and position the plane\\n    role.rotation.x = 0.5 * Math.PI;\\n    role.rotation.z = -0.5 * Math.PI;\\n    role.position.x = position.x;\\n    role.position.y = position.y;\\n    role.position.z = position.z;\\n    return role\\n}\\n/**\\n * 创建玩家\\n * @param {*} scene \\n */\\nfunction createPlayers(scene){\\n  var playerA = createPlayerRole(new THREE.Vector3(-160, 20, 0),'playerA')\\n  var playerB = createPlayerRole(new THREE.Vector3(160, 20, 0),'playerB')\\n  scene.add(playerA);\\n  scene.add(playerB);\\n}\\n/**\\n * 检查用户角色\\n * @param {*} roles \\n */\\nfunction checkRole(roles){\\n    if(roles.playerA == window.__USER_ID__){\\n      return 'playerA'\\n    }\\n    if(roles.playerB == window.__USER_ID__){\\n      return 'playerB'\\n    }\\n    if(roles.audience.includes(window.__USER_ID__)){\\n      return 'audience'\\n    }\\n    return ''\\n}\\n\\nfunction initMesh(role,scene){\\n   var meshs = []\\n   if(!role){\\n      var playerA = createRoleCard(new THREE.Vector3(0, 0, 5),'playerA')\\n      var playerB = createRoleCard(new THREE.Vector3(0, 0, 0),'playerB')\\n      var audience = createRoleCard(new THREE.Vector3(0, 0, -5),'audience')\\n      scene.add(playerA);\\n      scene.add(playerB);\\n      scene.add(audience);\\n      meshs = [playerA,playerB,audience]\\n   }else{\\n    meshs = createChessboard(scene)\\n    createPlayers(scene)\\n   }\\n   return meshs\\n}\\n\\nfunction initCamera(role,scene){\\n   let camera = ''\\n   if(!role){\\n     // create a camera, which defines where we're looking at.\\n      camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 1000);\\n      // position and point the camera to the center of the scene\\n      camera.position.x = 0;\\n      camera.position.y = -20;\\n      camera.position.z = 0;\\n      camera.lookAt(scene.position);\\n   }else if(role == 'playerA'){\\n      // camera = new THREE.OrthographicCamera(window.innerWidth / -14, window.innerWidth / 14, window.innerHeight / 8, window.innerHeight / -10,-400, 800);\\n      camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 1000);\\n      camera.position.x = -240;\\n      camera.position.y = 200;\\n      camera.position.z = 0;\\n      camera.lookAt(new THREE.Vector3(0,0,0));\\n   }else if(role == 'playerB'){\\n    // camera = new THREE.OrthographicCamera(window.innerWidth / -14, window.innerWidth / 14, window.innerHeight / 8, window.innerHeight / -10,-400, 800);\\n    camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 1000);\\n    camera.position.x = 240;\\n    camera.position.y = 200;\\n    camera.position.z = 0;\\n    camera.lookAt(new THREE.Vector3(0,0,0));\\n   }else if(role == 'audience'){\\n    // camera = new THREE.OrthographicCamera(window.innerWidth / -14, window.innerWidth / 14, window.innerHeight / 8, window.innerHeight / -10,-400, 800);\\n      camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 1000);\\n      camera.position.x = -200;\\n      camera.position.y = 200;\\n      camera.position.z = 0;\\n      camera.lookAt(new THREE.Vector3(0,0,0));\\n  }\\n   return camera\\n}\\nfunction start(role){\\n  camera = initCamera(role,scene)\\n  meshs = initMesh(role,scene)\\n  render()\\n  bindEvent(role)\\n}\\n/**\\n * 运行渲染场景和相机\\n */\\nfunction render() {\\n  stats.update();\\n  //按帧刷新\\n  requestAnimationFrame(render);\\n  renderer.render(scene, camera);\\n}\\n\\nfunction initStats() {\\n\\n  var stats = new Stats();\\n\\n  stats.setMode(0); // 0: fps, 1: ms\\n\\n  // Align top-left\\n  stats.domElement.style.position = 'absolute';\\n  stats.domElement.style.left = '0px';\\n  stats.domElement.style.top = '0px';\\n\\n  document.getElementById(\\\"Stats-output\\\").appendChild(stats.domElement);\\n\\n  return stats;\\n}\\nfunction bindEvent(role){\\n  var projector = new THREE.Projector();\\n  document.addEventListener('mousedown', onDocumentMouseDown, false);\\n\\n  function onDocumentMouseDown(event) {\\n\\n      var vector = new THREE.Vector3(( event.clientX / window.innerWidth ) * 2 - 1, -( event.clientY / window.innerHeight ) * 2 + 1, 0.5);\\n      vector = vector.unproject(camera);\\n      var raycaster = new THREE.Raycaster(camera.position, vector.sub(camera.position).normalize());\\n      var intersects = raycaster.intersectObjects(meshs);\\n      if (intersects.length > 0) {\\n\\n          console.log(intersects[0]);\\n          if(!role){\\n            if(intersects[0].object.material.opacity != 0.1){\\n              intersects[0].object.material.transparent = true;\\n              intersects[0].object.material.opacity = 0.1;\\n              send(GAME_MESSAGE.GAME_SELECT_ROLE,{role:intersects[0].object.name})\\n            }else{\\n              alert('角色不可选')\\n            }\\n          }else{\\n            switch(role){\\n              case 'playerA':\\n              //var textureBlack = THREE.ImageUtils.loadTexture(\\\"/assets/textures/general/black.jpg\\\");\\n              var textureWhite = THREE.ImageUtils.loadTexture(\\\"/assets/textures/general/white.jpg\\\");\\n              intersects[0].object.material.map = textureWhite\\n              break;\\n            }\\n          }\\n      }\\n  }\\n}\\n/**\\n * 初始化\\n * @param {是否开始游戏} start \\n */\\nfunction init(role) {\\n\\n  stats = initStats();\\n\\n  // 新建一个场景\\n  scene = new THREE.Scene();\\n  \\n  // 初始化一个相机\\n  camera = initCamera(role,scene)\\n\\n  //初始化场景中的网格\\n  meshs = initMesh(role,scene)\\n\\n  // 创建渲染器\\n  renderer = new THREE.WebGLRenderer();\\n\\n  renderer.setClearColor(new THREE.Color(0xEEEEEE, 1.0));\\n  renderer.setSize(window.innerWidth, window.innerHeight);\\n  renderer.shadowMapEnabled = true;\\n\\n  // add subtle ambient lighting\\n  var ambientLight = new THREE.AmbientLight(0xffffff);\\n  scene.add(ambientLight);\\n\\n  // add spotlight for the shadows\\n  var pointLight = new THREE.PointLight(0xffffff);\\n  pointLight.position.set(-40, 60, -10);\\n  pointLight.distance = 1000;\\n  // pointLight.castShadow = true;\\n  scene.add(pointLight);\\n\\n  // add the output of the renderer to the html element\\n  document.getElementById(\\\"WebGL-output\\\").appendChild(renderer.domElement);\\n  render();\\n\\n  \\n  \\n}\\n\\n\\n\",\"import socketClient from 'socket.io-client';\\n\\nexport default class SokcetServer {\\n    constructor({events}){\\n        this.client = new socketClient()\\n        if(!this.client){\\n            return null\\n        }\\n        if(events){\\n            this.addEvent(events)\\n        }\\n    }\\n    addEvent(events){\\n        try{\\n            Object.entries(events).map(event =>{\\n                this.client.on.apply(this.client,event)\\n            })\\n        }catch(e){\\n            throw 'add events error'\\n        }\\n        \\n    }\\n\\n}\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[\"main\"],{\"./config/constConfig.js\":\n/*!*******************************!*\\\n  !*** ./config/constConfig.js ***!\n  \\*******************************/\n/*! no static exports found */function(e,n){n.REDIS_MESSAGE={SHARE_MESSAGE:{KEY:\"SHARE_MESSAGE_KEY\",EVENT:\"SHARE_MESSAGE_EVENT\",CONTENT:\"%USER% %OPERATE% %CONTENT%\"}};n.HAPPY_RECORD={HOST_URL:\"http://localhost:3001\"},n.GAME_MESSAGE={GAME_INIT:\"GAME_INIT\",REDIS_READY:\"REDIS_READY\",GAME_SELECT_ROLE:\"GAME_SELECT_ROLE\",GAME_PLAY_CHESS:\"GAME_PRESS_CHESS\",GAME_START:\"GAME_START\"}},\"./static/index.js\":\n/*!*************************!*\\\n  !*** ./static/index.js ***!\n  \\*************************/\n/*! no static exports found */function(e,n,t){\"use strict\";var o,i=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e},r=function(e){return e&&e.__esModule?e:{default:e}}(t(/*! ./public/socket */\"./static/public/socket.js\")),a=t(/*! ../config/constConfig */\"./config/constConfig.js\");function E(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}var s={},c=null,l=null,u=null,d=[],p=null,w=function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t={name:\"wuziqi\",number:window.__GAME_NUMBER__,uid:window.__USER_ID__};f.client.emit(e,i({},t,n))},f=new r.default({events:(o={connect:function(){console.log(\"connect\")}},E(o,a.GAME_MESSAGE.REDIS_READY,function(e){w(a.GAME_MESSAGE.GAME_INIT)}),E(o,a.GAME_MESSAGE.GAME_INIT,function(e){!function(e){p=function(){var e=new Stats;return e.setMode(0),e.domElement.style.position=\"absolute\",e.domElement.style.left=\"0px\",e.domElement.style.top=\"0px\",document.getElementById(\"Stats-output\").appendChild(e.domElement),e}(),c=new THREE.Scene,l=S(e,c),d=m(e,c),(u=new THREE.WebGLRenderer).setClearColor(new THREE.Color(15658734,1)),u.setSize(window.innerWidth,window.innerHeight),u.shadowMapEnabled=!0;var n=new THREE.AmbientLight(16777215);c.add(n);var t=new THREE.PointLight(16777215);t.position.set(-40,60,-10),t.distance=1e3,c.add(t),document.getElementById(\"WebGL-output\").appendChild(u.domElement),h()}(function(e){if(e.playerA==window.__USER_ID__)return\"playerA\";if(e.playerB==window.__USER_ID__)return\"playerB\";if(e.audience.includes(window.__USER_ID__))return\"audience\";return\"\"}((s=\"string\"==typeof e?JSON.parse(e):e).roles))}),E(o,a.GAME_MESSAGE.GAME_SELECT_ROLE,function(e){var n=e.status,t=e.role,o=e.canStart;console.log(n),n&&(\"playerA\"!=t&&\"playerB\"!=t||(o?1:0),function(e){l=S(e,c),d=m(e,c),h(),function(e){new THREE.Projector;document.addEventListener(\"mousedown\",function(n){var t=new THREE.Vector3(n.clientX/window.innerWidth*2-1,-n.clientY/window.innerHeight*2+1,.5);t=t.unproject(l);var o=new THREE.Raycaster(l.position,t.sub(l.position).normalize()).intersectObjects(d);if(o.length>0)if(console.log(o[0]),e)switch(e){case\"playerA\":var i=THREE.ImageUtils.loadTexture(\"/assets/textures/general/white.jpg\");o[0].object.material.map=i}else.1!=o[0].object.material.opacity?(o[0].object.material.transparent=!0,o[0].object.material.opacity=.1,w(a.GAME_MESSAGE.GAME_SELECT_ROLE,{role:o[0].object.name})):alert(\"角色不可选\")},!1)}(e)}(t))}),o)});function _(e,n,t){var o=THREE.ImageUtils.loadTexture(\"/assets/textures/general/\"+n+\".jpg\"),i=new THREE.MeshLambertMaterial({color:7829503});return i.side=THREE.FrontSide,i.map=o,i.ID=n,t&&s.roles[n]&&\"audience\"!=n&&(i.transparent=!0,i.opacity=.1),new THREE.Mesh(e,i)}function R(e,n){var t=_(new THREE.BoxGeometry(4,4,4,1,1,1),n,!0);return t.name=n,t.receiveShadow=!0,t.rotation.x=.5*Math.PI,t.rotation.z=-.5*Math.PI,t.position.x=e.x,t.position.y=e.y,t.position.z=e.z,t}function T(e,n){var t=_(new THREE.BoxGeometry(40,40,40,1,1,1),n);return t.receiveShadow=!0,t.rotation.x=.5*Math.PI,t.rotation.z=-.5*Math.PI,t.position.x=e.x,t.position.y=e.y,t.position.z=e.z,t}function m(e,n){var t=[];if(e)t=function(e){var n=[],t=new THREE.BoxGeometry(6,6,6),o=THREE.ImageUtils.loadTexture(\"/assets/textures/general/black.jpg\"),i=THREE.ImageUtils.loadTexture(\"/assets/textures/general/white.jpg\"),r=THREE.ImageUtils.loadTexture(\"/assets/textures/general/empty.jpg\");return s.chessboard.forEach(function(a,E){a.forEach(function(c,l){var u=new THREE.MeshLambertMaterial;u.color=new THREE.Color(0,0,0),0==E||0==l||E==s.chessboard.length-1||l==a.length-1?(u.map=\"\",u.color=\"0x000000\"):1==c.value?u.map=i:2==c.value?u.map=o:u.map=r,u.side=THREE.FrontSide;var d=new THREE.Mesh(t,u);d.position.z=6*l-120,d.position.x=6*E-120,d.position.y=2,n.push(d),e.add(d)})}),n}(n),function(e){var n=T(new THREE.Vector3(-160,20,0),\"playerA\"),t=T(new THREE.Vector3(160,20,0),\"playerB\");e.add(n),e.add(t)}(n);else{var o=R(new THREE.Vector3(0,0,5),\"playerA\"),i=R(new THREE.Vector3(0,0,0),\"playerB\"),r=R(new THREE.Vector3(0,0,-5),\"audience\");n.add(o),n.add(i),n.add(r),t=[o,i,r]}return t}function S(e,n){var t=\"\";return e?\"playerA\"==e?((t=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,.1,1e3)).position.x=-240,t.position.y=200,t.position.z=0,t.lookAt(new THREE.Vector3(0,0,0))):\"playerB\"==e?((t=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,.1,1e3)).position.x=240,t.position.y=200,t.position.z=0,t.lookAt(new THREE.Vector3(0,0,0))):\"audience\"==e&&((t=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,.1,1e3)).position.x=-200,t.position.y=200,t.position.z=0,t.lookAt(new THREE.Vector3(0,0,0))):((t=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,.1,1e3)).position.x=0,t.position.y=-20,t.position.z=0,t.lookAt(n.position)),t}function h(){p.update(),requestAnimationFrame(h),u.render(c,l)}},\"./static/public/socket.js\":\n/*!*********************************!*\\\n  !*** ./static/public/socket.js ***!\n  \\*********************************/\n/*! no static exports found */function(e,n,t){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0});var o=function(){function e(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(n,t,o){return t&&e(n.prototype,t),o&&e(n,o),n}}(),i=function(e){return e&&e.__esModule?e:{default:e}}(t(/*! socket.io-client */\"./node_modules/socket.io-client/lib/index.js\"));var r=function(){function e(n){var t=n.events;if(function(e,n){if(!(e instanceof n))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.client=new i.default,!this.client)return null;t&&this.addEvent(t)}return o(e,[{key:\"addEvent\",value:function(e){var n=this;try{Object.entries(e).map(function(e){n.client.on.apply(n.client,e)})}catch(e){throw\"add events error\"}}}]),e}();n.default=r},0:\n/*!********************!*\\\n  !*** ws (ignored) ***!\n  \\********************/\n/*! no static exports found */function(e,n){}},[[\"./static/index.js\",\"manifest\",\"chunk-vendor\"]]]);","extractedComments":[]}