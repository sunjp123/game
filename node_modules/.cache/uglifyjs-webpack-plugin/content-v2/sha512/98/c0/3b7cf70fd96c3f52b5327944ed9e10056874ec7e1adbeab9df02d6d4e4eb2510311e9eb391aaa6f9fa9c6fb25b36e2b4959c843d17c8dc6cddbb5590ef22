{"map":"{\"version\":3,\"sources\":[\"/Applications/work/game/config/constConfig.js\",\"/Applications/work/game/static/index.js\",\"/Applications/work/game/static/public/socket.js\"],\"names\":[\"exports\",\"REDIS_MESSAGE\",\"SHARE_MESSAGE\",\"KEY\",\"EVENT\",\"CONTENT\",\"HAPPY_RECORD\",\"HOST_URL\",\"GAME_MESSAGE\",\"GAME_INIT\",\"REDIS_READY\",\"GAME_SELECT_ROLE\",\"GAME_PLAY_CHESS\",\"GAME_START\",\"GAME_FINISH\",\"__webpack_require__\",\"_constConfig\",\"gameData\",\"scene\",\"camera\",\"renderer\",\"gameStatus\",\"meshs\",\"stats\",\"send\",\"key\",\"value\",\"arguments\",\"length\",\"undefined\",\"message\",\"name\",\"number\",\"window\",\"__GAME_NUMBER__\",\"uid\",\"__USER_ID__\",\"socketServer\",\"client\",\"emit\",\"_extends\",\"SocketServer\",\"events\",\"connect\",\"console\",\"log\",\"_defineProperty\",\"_events\",\"initData\",\"JSON\",\"parse\",\"status\",\"role\",\"Stats\",\"setMode\",\"domElement\",\"style\",\"position\",\"left\",\"top\",\"document\",\"getElementById\",\"appendChild\",\"initStats\",\"THREE\",\"Scene\",\"initCamera\",\"initMesh\",\"WebGLRenderer\",\"setClearColor\",\"Color\",\"setSize\",\"innerWidth\",\"innerHeight\",\"shadowMapEnabled\",\"ambientLight\",\"AmbientLight\",\"add\",\"pointLight\",\"PointLight\",\"set\",\"distance\",\"controls\",\"this\",\"perspective\",\"switchCamera\",\"PerspectiveCamera\",\"OrthographicCamera\",\"x\",\"y\",\"z\",\"lookAt\",\"Vector3\",\"gui\",\"dat\",\"GUI\",\"listen\",\"createGUI\",\"render\",\"bindEvent\",\"init\",\"checkRole\",\"roles\",\"_ref\",\"canStart\",\"start\",\"createPlayers\",\"_ref2\",\"activePlayer\",\"chessboard\",\"textureBlack\",\"ImageUtils\",\"loadTexture\",\"textureWhite\",\"children\",\"find\",\"obj\",\"Mesh\",\"material\",\"map\",\"_ref3\",\"msg\",\"alert\",\"createRoleMesh\",\"geom\",\"transparent\",\"texture\",\"meshMaterial\",\"MeshLambertMaterial\",\"color\",\"side\",\"FrontSide\",\"ID\",\"opacity\",\"createRoleCard\",\"card\",\"BoxGeometry\",\"receiveShadow\",\"rotation\",\"Math\",\"PI\",\"createPlayerRole\",\"rolename\",\"playerA\",\"playerB\",\"audience\",\"includes\",\"cubes\",\"cubeGeometry\",\"textureEmpty\",\"forEach\",\"boxs\",\"i\",\"box\",\"j\",\"cubeMaterial\",\"cube\",\"push\",\"createChessboard\",\"update\",\"requestAnimationFrame\",\"Projector\",\"addEventListener\",\"event\",\"vector\",\"clientX\",\"clientY\",\"unproject\",\"intersects\",\"Raycaster\",\"sub\",\"normalize\",\"intersectObjects\",\"mesh\",\"object\",\"datas\",\"split\",\"player\",\"SokcetServer\",\"_classCallCheck\",\"socketClient\",\"addEvent\",\"_this\",\"Object\",\"entries\",\"on\",\"apply\",\"e\"],\"mappings\":\"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\",\"sourcesContent\":[\"const REDIS_MESSAGE = {\\n    SHARE_MESSAGE:{\\n        KEY:'SHARE_MESSAGE_KEY',\\n        EVENT:'SHARE_MESSAGE_EVENT',\\n        CONTENT:'%USER% %OPERATE% %CONTENT%'\\n    }\\n}\\n\\nexports.REDIS_MESSAGE = REDIS_MESSAGE\\n\\nconst HAPPY_RECORD = {\\n    HOST_URL:'http://localhost:3001'\\n}\\n\\nexports.HAPPY_RECORD = HAPPY_RECORD\\n\\n\\nexports.GAME_MESSAGE = {\\n    GAME_INIT:'GAME_INIT',\\n    REDIS_READY:'REDIS_READY',\\n    GAME_SELECT_ROLE:'GAME_SELECT_ROLE',\\n    GAME_PLAY_CHESS:'GAME_PRESS_CHESS',\\n    GAME_START:'GAME_START',\\n    GAME_FINISH:'GAME_FINISH'\\n}\",\"import SocketServer from \\\"./public/socket\\\"\\nimport { GAME_MESSAGE } from \\\"../config/constConfig\\\"\\nlet gameData = {}\\nlet scene = null;\\nlet camera = null;\\nlet renderer = null;\\nlet gameStatus = 0; //未开始\\nlet meshs = [];\\nlet stats = null;\\n/**\\n * 发送消息\\n * @param {消息key} key \\n * @param {消息内容} value \\n */\\nconst send = (key,value={})=>{\\n  let message = {name:'wuziqi',number:window.__GAME_NUMBER__,uid:window.__USER_ID__}\\n  socketServer.client.emit(key,{...message,...value})\\n}\\n/**\\n * 创建socket 类\\n */\\nconst socketServer = new SocketServer({\\n  events:{\\n    'connect':()=>{\\n      console.log('connect')\\n    },\\n    [GAME_MESSAGE.REDIS_READY]:(message)=>{\\n      send(GAME_MESSAGE.GAME_INIT)\\n    },\\n    [GAME_MESSAGE.GAME_INIT]:(initData)=>{\\n      gameData = typeof initData == 'string'?JSON.parse(initData):initData\\n      gameStatus = gameData.status\\n      init(checkRole(gameData.roles))\\n    },\\n    [GAME_MESSAGE.GAME_SELECT_ROLE]:({status,role,canStart,uid})=>{\\n      if(status){\\n        if(role == 'playerA' || role == 'playerB')\\n        gameStatus = canStart?1:0\\n        gameData.roles[role] = uid\\n        if(window.__USER_ID__ == uid){\\n          start(role)\\n        }else if(checkRole(gameData.roles)){\\n          createPlayers(scene)\\n        }\\n        \\n      }\\n    },\\n    [GAME_MESSAGE.GAME_PLAY_CHESS]:({x,y,value,activePlayer})=>{\\n      gameData.activePlayer = activePlayer\\n      gameData.chessboard[x][y] = value\\n      let textureBlack = THREE.ImageUtils.loadTexture(\\\"/assets/textures/general/black.jpg\\\");\\n      let textureWhite = THREE.ImageUtils.loadTexture(\\\"/assets/textures/general/white.jpg\\\");\\n      let name = '0,'+x+','+y;\\n      let mesh = scene.children.find((obj)=>{\\n         if(obj instanceof THREE.Mesh && obj.name == name){\\n            return true\\n         }\\n         return false\\n      })\\n      mesh.material.map = value == 1?textureWhite:textureBlack\\n    },\\n    [GAME_MESSAGE.GAME_FINISH]:({msg})=>{\\n      alert(msg)\\n      gameStatus = 2;\\n    }\\n  }\\n});\\n/**\\n * 创建角色卡片网格\\n * @param {位置} position \\n * @param {角色} role \\n */\\nfunction createRoleMesh(geom,role,transparent) {\\n\\n  var texture = THREE.ImageUtils.loadTexture(\\\"/assets/textures/general/\\\" + role + \\\".jpg\\\");\\n  var meshMaterial = new THREE.MeshLambertMaterial({color: 0x7777ff});\\n  meshMaterial.side = THREE.FrontSide;//THREE.DoubleSide\\n  meshMaterial.map = texture;\\n  meshMaterial.ID = role;\\n  if(transparent&&gameData.roles[role]&&role!='audience'){\\n    meshMaterial.transparent = true; //是否可以设置透明度\\n    meshMaterial.opacity = 0.1;      //设置透明度\\n  }\\n  //基础材质 多用于线框调试\\n  // var wireFrameMat = new THREE.MeshBasicMaterial();\\n  // wireFrameMat.wireframe = true;\\n\\n  // 融合材质\\n  // var mesh = THREE.SceneUtils.createMultiMaterialObject(geom, [meshMaterial, wireFrameMat]);\\n  var mesh = new THREE.Mesh(geom, meshMaterial);\\n  return mesh;\\n}\\n/**\\n * 创建角色卡片\\n * @param {位置} position \\n * @param {角色} role \\n */\\nfunction createRoleCard(position,role){\\n    // create the ground plane\\n    var cardGeometry = new THREE.BoxGeometry(4, 4, 4,1, 1,1);\\n    var card = createRoleMesh(cardGeometry,role,true);\\n    card.name = role;\\n    // var plane = new THREE.Mesh(planeGeometry, planeMaterial);\\n    card.receiveShadow = true;\\n    // rotate and position the plane\\n    card.rotation.x = 0.5 * Math.PI;\\n    card.rotation.z = -0.5 * Math.PI;\\n    card.position.x = position.x;\\n    card.position.y = position.y;\\n    card.position.z = position.z;\\n    return card\\n}\\n/**\\n * 创建棋盘\\n * @param {场景} scene \\n */\\nfunction createChessboard(scene){\\n  var cubes = []\\n  var cubeGeometry = new THREE.BoxGeometry(6, 6, 6);\\n  var textureBlack = THREE.ImageUtils.loadTexture(\\\"/assets/textures/general/black.jpg\\\");\\n  var textureWhite = THREE.ImageUtils.loadTexture(\\\"/assets/textures/general/white.jpg\\\");\\n  var textureEmpty = THREE.ImageUtils.loadTexture(\\\"/assets/textures/general/empty.jpg\\\");\\n  gameData.chessboard.forEach((boxs,i)=>{\\n      boxs.forEach((box,j)=>{\\n          var cubeMaterial = new THREE.MeshLambertMaterial();\\n          cubeMaterial.color = new THREE.Color(0, 0, 0);\\n          if(i==0 || j==0 || i==(gameData.chessboard.length-1) || j==(boxs.length-1)){\\n            cubeMaterial.map = ''\\n            cubeMaterial.color = '0x000000'\\n          }\\n          else if(box.value == 1){\\n            cubeMaterial.map = textureWhite\\n          }else if(box.value == 2){\\n            cubeMaterial.map = textureBlack\\n          }else{\\n            cubeMaterial.map = textureEmpty\\n          }\\n          cubeMaterial.side = THREE.FrontSide;//THREE.DoubleSide\\n          var cube = new THREE.Mesh(cubeGeometry, cubeMaterial);\\n\\n          cube.position.z = -((240) / 2) + (j * 6);\\n          cube.position.x = -((240) / 2) + (i * 6);\\n          cube.position.y = 2;\\n          cube.name = box.value + ',' + i + ',' + j\\n          cubes.push(cube)\\n          scene.add(cube);\\n      })\\n  })\\n  return cubes\\n}\\n/**\\n * 创建角色形象\\n * @param {角色位置} position \\n * @param {角色名} rolename \\n */\\nfunction createPlayerRole(position,rolename){\\n    var roleGeometry = new THREE.BoxGeometry(40, 40, 40,1, 1,1);\\n    var role = createRoleMesh(roleGeometry,rolename);\\n    // var plane = new THREE.Mesh(planeGeometry, planeMaterial);\\n    role.receiveShadow = true;\\n    // rotate and position the plane\\n    role.rotation.x = 0.5 * Math.PI;\\n    role.rotation.z = -0.5 * Math.PI;\\n    role.position.x = position.x;\\n    role.position.y = position.y;\\n    role.position.z = position.z;\\n    return role\\n}\\n/**\\n * 创建玩家\\n * @param {*} scene \\n */\\nfunction createPlayers(scene){\\n  if(gameData.roles['playerA']){\\n    var playerA = createPlayerRole(new THREE.Vector3(-160, 20, 0),'playerA')\\n    scene.add(playerA);\\n  }\\n  if(gameData.roles['playerB']){\\n    var playerB = createPlayerRole(new THREE.Vector3(160, 20, 0),'playerB')\\n    scene.add(playerB);\\n  }\\n}\\n/**\\n * 检查用户角色\\n * @param {*} roles \\n */\\nfunction checkRole(roles){\\n    if(roles.playerA == window.__USER_ID__){\\n      return 'playerA'\\n    }\\n    if(roles.playerB == window.__USER_ID__){\\n      return 'playerB'\\n    }\\n    if(roles.audience.includes(window.__USER_ID__)){\\n      return 'audience'\\n    }\\n    return ''\\n}\\n\\nfunction initMesh(role,scene){\\n   var meshs = []\\n   if(!role){\\n      var playerA = createRoleCard(new THREE.Vector3(0, 0, 5),'playerA')\\n      var playerB = createRoleCard(new THREE.Vector3(0, 0, 0),'playerB')\\n      var audience = createRoleCard(new THREE.Vector3(0, 0, -5),'audience')\\n      scene.add(playerA);\\n      scene.add(playerB);\\n      scene.add(audience);\\n      meshs = [playerA,playerB,audience]\\n   }else{\\n    meshs = createChessboard(scene)\\n    createPlayers(scene)\\n   }\\n   return meshs\\n}\\n\\nfunction initCamera(role,scene){\\n   let camera = ''\\n   if(!role){\\n     // create a camera, which defines where we're looking at.\\n      camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 1000);\\n      // position and point the camera to the center of the scene\\n      camera.position.x = 0;\\n      camera.position.y = -20;\\n      camera.position.z = 0;\\n      camera.lookAt(scene.position);\\n   }else if(role == 'playerA'){\\n      // camera = new THREE.OrthographicCamera(window.innerWidth / -14, window.innerWidth / 14, window.innerHeight / 8, window.innerHeight / -10,-400, 800);\\n      camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 1000);\\n      camera.position.x = -240;\\n      camera.position.y = 200;\\n      camera.position.z = 0;\\n      camera.lookAt(new THREE.Vector3(0,0,0));\\n   }else if(role == 'playerB'){\\n    // camera = new THREE.OrthographicCamera(window.innerWidth / -14, window.innerWidth / 14, window.innerHeight / 8, window.innerHeight / -10,-400, 800);\\n    camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 1000);\\n    camera.position.x = 240;\\n    camera.position.y = 200;\\n    camera.position.z = 0;\\n    camera.lookAt(new THREE.Vector3(0,0,0));\\n   }else if(role == 'audience'){\\n    camera = new THREE.OrthographicCamera(window.innerWidth / -8, window.innerWidth / 8, window.innerHeight / 16, window.innerHeight / -16, -200, 500);\\n    camera.position.x = 0;\\n    camera.position.y = 60;\\n    camera.position.z = 160;\\n      camera.lookAt(new THREE.Vector3(0,0,0));\\n  }\\n   return camera\\n}\\nfunction start(role){\\n  camera = initCamera(role,scene)\\n  meshs = initMesh(role,scene)\\n  render()\\n  bindEvent(role)\\n}\\n/**\\n * 运行渲染场景和相机\\n */\\nfunction render() {\\n  stats.update();\\n  //按帧刷新\\n  requestAnimationFrame(render);\\n  renderer.render(scene, camera);\\n}\\n\\nfunction initStats() {\\n\\n  var stats = new Stats();\\n\\n  stats.setMode(0); // 0: fps, 1: ms\\n\\n  // Align top-left\\n  stats.domElement.style.position = 'absolute';\\n  stats.domElement.style.left = '0px';\\n  stats.domElement.style.top = '0px';\\n\\n  document.getElementById(\\\"Stats-output\\\").appendChild(stats.domElement);\\n\\n  return stats;\\n}\\nfunction bindEvent(role){\\n  var projector = new THREE.Projector();\\n  document.addEventListener('mousedown', onDocumentMouseDown, false);\\n\\n  function onDocumentMouseDown(event) {\\n\\n      var vector = new THREE.Vector3(( event.clientX / window.innerWidth ) * 2 - 1, -( event.clientY / window.innerHeight ) * 2 + 1, 0.5);\\n      vector = vector.unproject(camera);\\n      var raycaster = new THREE.Raycaster(camera.position, vector.sub(camera.position).normalize());\\n      var intersects = raycaster.intersectObjects(meshs);\\n      if (intersects.length > 0) {\\n          if(!role){\\n            if(intersects[0].object.material.opacity != 0.1){\\n              intersects[0].object.material.transparent = true;\\n              intersects[0].object.material.opacity = 0.1;\\n              send(GAME_MESSAGE.GAME_SELECT_ROLE,{role:intersects[0].object.name})\\n            }else{\\n              alert('角色不可选')\\n            }\\n          }else if(role!='audience' && gameStatus == 1){\\n            let mesh = intersects[0].object\\n            if(!mesh) return;\\n            let datas = mesh.name.split(',')\\n            if(datas[0]!='0') return\\n            send(GAME_MESSAGE.GAME_PLAY_CHESS,{x:datas[1],y:datas[2],player:role})\\n          }\\n      }\\n  }\\n}\\nfunction createGUI(role){\\n    if(role!='audience') return\\n    var controls = new function () {\\n    this.perspective = \\\"Perspective\\\";\\n    this.switchCamera = function () {\\n            if (camera instanceof THREE.PerspectiveCamera) {\\n                camera = new THREE.OrthographicCamera(window.innerWidth / -8, window.innerWidth / 8, window.innerHeight / 16, window.innerHeight / -16, -200, 500);\\n                camera.position.x = 0;\\n                camera.position.y = 60;\\n                camera.position.z = 160;\\n                camera.lookAt(new THREE.Vector3(0,0,0));\\n                this.perspective = \\\"Orthographic\\\";\\n            } else {\\n                camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 1000);\\n                camera.position.x = 0;\\n                camera.position.y = 60;\\n                camera.position.z = 160;\\n                camera.lookAt(new THREE.Vector3(0,0,0));\\n                this.perspective = \\\"Perspective\\\";\\n            }\\n        };\\n    };\\n\\n    var gui = new dat.GUI();\\n    gui.add(controls, 'switchCamera');\\n    gui.add(controls, 'perspective').listen();\\n}\\n/**\\n * 初始化\\n * @param {是否开始游戏} start \\n */\\nfunction init(role) {\\n\\n  stats = initStats();\\n\\n  // 新建一个场景\\n  scene = new THREE.Scene();\\n  \\n  // 初始化一个相机\\n  camera = initCamera(role,scene)\\n\\n  //初始化场景中的网格\\n  meshs = initMesh(role,scene)\\n\\n  // 创建渲染器\\n  renderer = new THREE.WebGLRenderer();\\n\\n  renderer.setClearColor(new THREE.Color(0xEEEEEE, 1.0));\\n  renderer.setSize(window.innerWidth, window.innerHeight);\\n  renderer.shadowMapEnabled = true;\\n\\n  // add subtle ambient lighting\\n  var ambientLight = new THREE.AmbientLight(0xffffff);\\n  scene.add(ambientLight);\\n\\n  // add spotlight for the shadows\\n  var pointLight = new THREE.PointLight(0xffffff);\\n  pointLight.position.set(-40, 60, -10);\\n  pointLight.distance = 1000;\\n  // pointLight.castShadow = true;\\n  scene.add(pointLight);\\n\\n  createGUI(role)\\n  // add the output of the renderer to the html element\\n  document.getElementById(\\\"WebGL-output\\\").appendChild(renderer.domElement);\\n  render();\\n\\n  bindEvent(role)\\n  \\n}\\n\\n\\n\",\"import socketClient from 'socket.io-client';\\n\\nexport default class SokcetServer {\\n    constructor({events}){\\n        this.client = new socketClient()\\n        if(!this.client){\\n            return null\\n        }\\n        if(events){\\n            this.addEvent(events)\\n        }\\n    }\\n    addEvent(events){\\n        try{\\n            Object.entries(events).map(event =>{\\n                this.client.on.apply(this.client,event)\\n            })\\n        }catch(e){\\n            throw 'add events error'\\n        }\\n        \\n    }\\n\\n}\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[\"main\"],{\"./config/constConfig.js\":\n/*!*******************************!*\\\n  !*** ./config/constConfig.js ***!\n  \\*******************************/\n/*! no static exports found */function(e,n){n.REDIS_MESSAGE={SHARE_MESSAGE:{KEY:\"SHARE_MESSAGE_KEY\",EVENT:\"SHARE_MESSAGE_EVENT\",CONTENT:\"%USER% %OPERATE% %CONTENT%\"}};n.HAPPY_RECORD={HOST_URL:\"http://localhost:3001\"},n.GAME_MESSAGE={GAME_INIT:\"GAME_INIT\",REDIS_READY:\"REDIS_READY\",GAME_SELECT_ROLE:\"GAME_SELECT_ROLE\",GAME_PLAY_CHESS:\"GAME_PRESS_CHESS\",GAME_START:\"GAME_START\",GAME_FINISH:\"GAME_FINISH\"}},\"./static/index.js\":\n/*!*************************!*\\\n  !*** ./static/index.js ***!\n  \\*************************/\n/*! no static exports found */function(e,n,t){\"use strict\";var i,o=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e},r=function(e){return e&&e.__esModule?e:{default:e}}(t(/*! ./public/socket */\"./static/public/socket.js\")),a=t(/*! ../config/constConfig */\"./config/constConfig.js\");function E(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}var s={},c=null,l=null,u=null,d=0,p=[],w=null,_=function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t={name:\"wuziqi\",number:window.__GAME_NUMBER__,uid:window.__USER_ID__};f.client.emit(e,o({},t,n))},f=new r.default({events:(i={connect:function(){console.log(\"connect\")}},E(i,a.GAME_MESSAGE.REDIS_READY,function(e){_(a.GAME_MESSAGE.GAME_INIT)}),E(i,a.GAME_MESSAGE.GAME_INIT,function(e){s=\"string\"==typeof e?JSON.parse(e):e,d=s.status,function(e){w=function(){var e=new Stats;return e.setMode(0),e.domElement.style.position=\"absolute\",e.domElement.style.left=\"0px\",e.domElement.style.top=\"0px\",document.getElementById(\"Stats-output\").appendChild(e.domElement),e}(),c=new THREE.Scene,l=v(e,c),p=m(e,c),(u=new THREE.WebGLRenderer).setClearColor(new THREE.Color(15658734,1)),u.setSize(window.innerWidth,window.innerHeight),u.shadowMapEnabled=!0;var n=new THREE.AmbientLight(16777215);c.add(n);var t=new THREE.PointLight(16777215);t.position.set(-40,60,-10),t.distance=1e3,c.add(t),function(e){if(\"audience\"!=e)return;var n=new function(){this.perspective=\"Perspective\",this.switchCamera=function(){l instanceof THREE.PerspectiveCamera?((l=new THREE.OrthographicCamera(window.innerWidth/-8,window.innerWidth/8,window.innerHeight/16,window.innerHeight/-16,-200,500)).position.x=0,l.position.y=60,l.position.z=160,l.lookAt(new THREE.Vector3(0,0,0)),this.perspective=\"Orthographic\"):((l=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,.1,1e3)).position.x=0,l.position.y=60,l.position.z=160,l.lookAt(new THREE.Vector3(0,0,0)),this.perspective=\"Perspective\")}},t=new dat.GUI;t.add(n,\"switchCamera\"),t.add(n,\"perspective\").listen()}(e),document.getElementById(\"WebGL-output\").appendChild(u.domElement),H(),M(e)}(A(s.roles))}),E(i,a.GAME_MESSAGE.GAME_SELECT_ROLE,function(e){var n=e.status,t=e.role,i=e.canStart,o=e.uid;n&&(\"playerA\"!=t&&\"playerB\"!=t||(d=i?1:0),s.roles[t]=o,window.__USER_ID__==o?function(e){l=v(e,c),p=m(e,c),H(),M(e)}(t):A(s.roles)&&T(c))}),E(i,a.GAME_MESSAGE.GAME_PLAY_CHESS,function(e){var n=e.x,t=e.y,i=e.value,o=e.activePlayer;s.activePlayer=o,s.chessboard[n][t]=i;var r=THREE.ImageUtils.loadTexture(\"/assets/textures/general/black.jpg\"),a=THREE.ImageUtils.loadTexture(\"/assets/textures/general/white.jpg\"),E=\"0,\"+n+\",\"+t;c.children.find(function(e){return e instanceof THREE.Mesh&&e.name==E}).material.map=1==i?a:r}),E(i,a.GAME_MESSAGE.GAME_FINISH,function(e){var n=e.msg;alert(n),d=2}),i)});function h(e,n,t){var i=THREE.ImageUtils.loadTexture(\"/assets/textures/general/\"+n+\".jpg\"),o=new THREE.MeshLambertMaterial({color:7829503});return o.side=THREE.FrontSide,o.map=i,o.ID=n,t&&s.roles[n]&&\"audience\"!=n&&(o.transparent=!0,o.opacity=.1),new THREE.Mesh(e,o)}function R(e,n){var t=h(new THREE.BoxGeometry(4,4,4,1,1,1),n,!0);return t.name=n,t.receiveShadow=!0,t.rotation.x=.5*Math.PI,t.rotation.z=-.5*Math.PI,t.position.x=e.x,t.position.y=e.y,t.position.z=e.z,t}function S(e,n){var t=h(new THREE.BoxGeometry(40,40,40,1,1,1),n);return t.receiveShadow=!0,t.rotation.x=.5*Math.PI,t.rotation.z=-.5*Math.PI,t.position.x=e.x,t.position.y=e.y,t.position.z=e.z,t}function T(e){if(s.roles.playerA){var n=S(new THREE.Vector3(-160,20,0),\"playerA\");e.add(n)}if(s.roles.playerB){var t=S(new THREE.Vector3(160,20,0),\"playerB\");e.add(t)}}function A(e){return e.playerA==window.__USER_ID__?\"playerA\":e.playerB==window.__USER_ID__?\"playerB\":e.audience.includes(window.__USER_ID__)?\"audience\":\"\"}function m(e,n){var t=[];if(e)t=function(e){var n=[],t=new THREE.BoxGeometry(6,6,6),i=THREE.ImageUtils.loadTexture(\"/assets/textures/general/black.jpg\"),o=THREE.ImageUtils.loadTexture(\"/assets/textures/general/white.jpg\"),r=THREE.ImageUtils.loadTexture(\"/assets/textures/general/empty.jpg\");return s.chessboard.forEach(function(a,E){a.forEach(function(c,l){var u=new THREE.MeshLambertMaterial;u.color=new THREE.Color(0,0,0),0==E||0==l||E==s.chessboard.length-1||l==a.length-1?(u.map=\"\",u.color=\"0x000000\"):1==c.value?u.map=o:2==c.value?u.map=i:u.map=r,u.side=THREE.FrontSide;var d=new THREE.Mesh(t,u);d.position.z=6*l-120,d.position.x=6*E-120,d.position.y=2,d.name=c.value+\",\"+E+\",\"+l,n.push(d),e.add(d)})}),n}(n),T(n);else{var i=R(new THREE.Vector3(0,0,5),\"playerA\"),o=R(new THREE.Vector3(0,0,0),\"playerB\"),r=R(new THREE.Vector3(0,0,-5),\"audience\");n.add(i),n.add(o),n.add(r),t=[i,o,r]}return t}function v(e,n){var t=\"\";return e?\"playerA\"==e?((t=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,.1,1e3)).position.x=-240,t.position.y=200,t.position.z=0,t.lookAt(new THREE.Vector3(0,0,0))):\"playerB\"==e?((t=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,.1,1e3)).position.x=240,t.position.y=200,t.position.z=0,t.lookAt(new THREE.Vector3(0,0,0))):\"audience\"==e&&((t=new THREE.OrthographicCamera(window.innerWidth/-8,window.innerWidth/8,window.innerHeight/16,window.innerHeight/-16,-200,500)).position.x=0,t.position.y=60,t.position.z=160,t.lookAt(new THREE.Vector3(0,0,0))):((t=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,.1,1e3)).position.x=0,t.position.y=-20,t.position.z=0,t.lookAt(n.position)),t}function H(){w.update(),requestAnimationFrame(H),u.render(c,l)}function M(e){new THREE.Projector;document.addEventListener(\"mousedown\",function(n){var t=new THREE.Vector3(n.clientX/window.innerWidth*2-1,-n.clientY/window.innerHeight*2+1,.5);t=t.unproject(l);var i=new THREE.Raycaster(l.position,t.sub(l.position).normalize()).intersectObjects(p);if(i.length>0)if(e){if(\"audience\"!=e&&1==d){var o=i[0].object;if(!o)return;var r=o.name.split(\",\");if(\"0\"!=r[0])return;_(a.GAME_MESSAGE.GAME_PLAY_CHESS,{x:r[1],y:r[2],player:e})}}else.1!=i[0].object.material.opacity?(i[0].object.material.transparent=!0,i[0].object.material.opacity=.1,_(a.GAME_MESSAGE.GAME_SELECT_ROLE,{role:i[0].object.name})):alert(\"角色不可选\")},!1)}},\"./static/public/socket.js\":\n/*!*********************************!*\\\n  !*** ./static/public/socket.js ***!\n  \\*********************************/\n/*! no static exports found */function(e,n,t){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0});var i=function(){function e(e,n){for(var t=0;t<n.length;t++){var i=n[t];i.enumerable=i.enumerable||!1,i.configurable=!0,\"value\"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(n,t,i){return t&&e(n.prototype,t),i&&e(n,i),n}}(),o=function(e){return e&&e.__esModule?e:{default:e}}(t(/*! socket.io-client */\"./node_modules/socket.io-client/lib/index.js\"));var r=function(){function e(n){var t=n.events;if(function(e,n){if(!(e instanceof n))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.client=new o.default,!this.client)return null;t&&this.addEvent(t)}return i(e,[{key:\"addEvent\",value:function(e){var n=this;try{Object.entries(e).map(function(e){n.client.on.apply(n.client,e)})}catch(e){throw\"add events error\"}}}]),e}();n.default=r},0:\n/*!********************!*\\\n  !*** ws (ignored) ***!\n  \\********************/\n/*! no static exports found */function(e,n){}},[[\"./static/index.js\",\"manifest\",\"chunk-vendor\"]]]);","extractedComments":[]}